import { chat } from '../src/llm/yandex-gpt.js';

const userText = process.argv.slice(2).join(' ').trim() || '–ü—Ä–∏–≤–µ—Ç! –ö–æ—Ä–æ—Ç–∫–æ –ø—Ä–µ–¥—Å—Ç–∞–≤—å—Å—è.';

(async () => {
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
    const requiredEnvVars = ['YC_API_KEY', 'YC_FOLDER_ID'];
    const missingVars = requiredEnvVars.filter((varName) => !process.env[varName]);

    if (missingVars.length > 0) {
      console.error(
        '‚ùå LLM error: Missing required environment variables:',
        missingVars.join(', ')
      );
      console.log('‚ÑπÔ∏è  Skipping LLM test in CI environment');
      process.exitCode = 0; // –ù–µ —Å—á–∏—Ç–∞–µ–º —ç—Ç–æ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–π –æ—à–∏–±–∫–æ–π
      return;
    }

    const reply = await chat([
      { role: 'system', text: '–û—Ç–≤–µ—á–∞–π –∫—Ä–∞—Ç–∫–æ –∏ –¥—Ä—É–∂–µ–ª—é–±–Ω–æ.' },
      { role: 'user', text: userText },
    ]);
    console.log('ü§ñ', reply);
  } catch (e) {
    console.error('‚ùå LLM error:', e.message);

    // –í CI –æ–∫—Ä—É–∂–µ–Ω–∏–∏ –Ω–µ —Å—á–∏—Ç–∞–µ–º –æ—à–∏–±–∫–∏ LLM –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–º–∏
    if (process.env.CI) {
      console.log('‚ÑπÔ∏è  LLM test failed in CI, but continuing...');
      process.exitCode = 0;
    } else {
      process.exitCode = 1;
    }
  }
})();
