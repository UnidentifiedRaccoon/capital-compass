name: Deploy to Yandex Cloud Serverless Container

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  REGISTRY: cr.yandex
  IMAGE_NAME: capital-compass

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Yandex Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: json_key
          password: ${{ secrets.YC_SA_JSON }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ secrets.YC_REGISTRY_ID }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64
          push: true
          tags: ${{ steps.meta.tags }}
          labels: ${{ steps.meta.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Deploy to Yandex Cloud Serverless Container
        if: github.ref == 'refs/heads/main'
        run: |
          # Установка Yandex CLI
          curl -sSL https://storage.yandexcloud.net/yandexcloud-yc/install.sh | bash
          export PATH=$PATH:$HOME/yandex-cloud/bin

          # Аутентификация с помощью service account
          echo '${{ secrets.YC_SA_JSON }}' > sa.json
          yc config set service-account-key sa.json

          # Настройка yc
          yc config set cloud-id ${{ secrets.YC_CLOUD_ID }}
          yc config set folder-id ${{ secrets.YC_FOLDER_ID }}

          # Создание или обновление serverless container
          yc serverless container create \
            --name ${{ secrets.YC_CONTAINER_NAME }} \
            --description "Capital Compass AI Telegram Bot" \
            --folder-id ${{ secrets.YC_FOLDER_ID }} || true

          # Создание ревизии контейнера
          yc serverless container revision deploy \
            --container-name ${{ secrets.YC_CONTAINER_NAME }} \
            --image ${{ env.REGISTRY }}/${{ secrets.YC_REGISTRY_ID }}/${{ env.IMAGE_NAME }}:latest \
            --service-account-id ${{ fromJson(secrets.YC_SA_JSON).service_account_id }} \
            --environment "BOT_MODE=webhook,WEBHOOK_SECRET=${{ secrets.WEBHOOK_SECRET }},PUBLIC_BASE_URL=,LOG_LEVEL=info,API_TIMEOUT_MS=7000,TELEGRAM_BOT_TOKEN=${{ secrets.TELEGRAM_BOT_TOKEN }},YC_API_KEY=${{ secrets.YC_API_KEY }},YC_FOLDER_ID=${{ secrets.YC_FOLDER_ID }},YC_GPT_MODEL=${{ secrets.YC_GPT_MODEL }},YC_GPT_ENDPOINT=${{ secrets.YC_GPT_ENDPOINT }}" \
            --memory 512m \
            --cores 1 \
            --execution-timeout 30s \
            --concurrency 1 \
            --public-endpoint

      - name: Cleanup
        if: always()
        run: |
          rm -f sa.json
